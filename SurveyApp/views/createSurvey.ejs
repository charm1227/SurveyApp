<!DOCTYPE html>
<html lang="en">
<head>
	<title>Survey App | Create Survey Page</title>
	<meta charset="utf-8">
	<link rel="stylesheet" href="css/styles.css">

    <script language="JavaScript">
        let questions = [];
        let elements = [];
        function addQuestion() {
            var surveyQuestions = document.getElementById('survey_questions');
            const qId = 'q' + questions.length;

            // create question container
            var question_div = document.createElement('div');
            question_div.id = qId + '_div';
            surveyQuestions.appendChild(question_div);

            // create question list
            var question_list = document.createElement('li');
            question_list.class = 'question';
            question_list.id = qId;
            question_div.appendChild(question_list);

            tfClicked = false;
            mcClicked = false;
            frClicked = false;

            //tf radio
            var tf_radio = document.createElement('input');
            tf_radio.type = 'radio';
            tf_radio.name = qId + '_type';
            tf_radio.value = 'tf';
            tf_radio.checked = 'checked';
            tfClicked = true;
            tf_radio.addEventListener('click', () => {
                if(tfClicked) {
                    return;
                }
                tfClicked = true;
                mcClicked = false;
                frClicked = false;
                tfSelected(question_list.id);
            });
            question_list.appendChild(tf_radio);

            // tf label
            var tf_label = document.createElement('label');
            tf_label.innerHTML = 'true/false';
            question_list.appendChild(tf_label);

            // mc radio
            var mc_radio = document.createElement('input');
            mc_radio.type = 'radio';
            mc_radio.name = qId + '_type';
            mc_radio.value = 'mc';
            mc_radio.addEventListener('click', () => {
                if(mcClicked) {
                    return;
                }
                mcClicked = true;
                tfClicked = false;
                frClicked = false;
                mcSelected(question_list.id);
            });
            question_list.appendChild(mc_radio);

            // mc label
            var mc_label = document.createElement('label');
            mc_label.innerHTML = 'multiple choice';
            question_list.appendChild(mc_label);

            // fr radio
            var fr_radio = document.createElement('input');
            fr_radio.type = 'radio';
            fr_radio.name = qId + '_type';
            fr_radio.value = 'fr';
            fr_radio.addEventListener('click', () => {
                if(frClicked) {
                    return;
                }
                frClicked = true;
                mcClicked = false;
                tfClicked = false;
                frSelected(question_list.id);
            });
            question_list.appendChild(fr_radio);

            // fr label
            var fr_label = document.createElement('label');
            fr_label.innerHTML = 'free response';
            question_list.appendChild(fr_label);

            // question text
            var question_text = document.createElement('input');
            question_text.name = qId + '_text';
            question_text.required = true;
            question_text.type = 'text';
            question_text.placeholder = 'Enter question...';
            question_list.appendChild(question_text);

            // delete question button
            var delete_question_button = document.createElement('img');
            delete_question_button.type = 'image';
            delete_question_button.className = 'buttonIcon';
            delete_question_button.title = 'delete question';
            delete_question_button.src = 'icons/x.png';
            delete_question_button.alt = 'delete question';
            delete_question_button.addEventListener('click', () => {
                deleteQuestion(question_div.id);
            });
            question_div.appendChild(delete_question_button);

            questions.push(question_list);
        }
        function deleteQuestion(qId) {
            var question = document.getElementById(qId);
            question.remove();
        }
        function tfSelected(qId) {
            clearMC(qId);
        }
        function mcSelected(qId, switchingToMC) {
            var question = document.getElementById(qId);

            // create mc container
            var response_div = document.createElement('div'); 
            response_div.id = qId + '_response_div';
            question.appendChild(response_div);
            elements.push(response_div);

            // create mc list
            var response_list = document.createElement('ol');
            response_list.id = qId + '_responses';
            response_list.class = 'response_list';
            response_div.appendChild(response_list);
            elements.push(response_list);

            addMCResponse(response_list.id);
        
            // add response button
            var add_response_button = document.createElement('img');
            add_response_button.id = qId + '_add_button';
            add_response_button.className = 'buttonIcon';
            add_response_button.title = 'add response';
            add_response_button.type = 'image';
            add_response_button.src = 'icons/add.png';
            add_response_button.alt = 'add response';
            add_response_button.addEventListener('click', () => {
                addMCResponse(response_list.id);
            });
            response_div.appendChild(add_response_button);
            elements.push(add_response_button);
        
        }
        function frSelected(qId) {
            clearMC(qId);
        }
        function addMCResponse(response_list_id) {
            var responseList = document.getElementById(response_list_id);

            // response container
            var response_div = document.createElement('div');
            response_div.id = response_list_id + '_r' + responseList.childElementCount + '_div';
            responseList.appendChild(response_div);

            // response
            var response = document.createElement('li');
            response.class = 'response';
            response.id = response_list_id + '_r' + responseList.childElementCount;
            response_div.appendChild(response);

            // response text
            var response_text = document.createElement('input');
            response_text.name = response_list_id;
            response_text.required = true;
            response_text.type = 'text';
            response_text.placeholder = 'Enter answer...';
            response.appendChild(response_text);

            // delete response button
            var delete_response_button = document.createElement('img');
            delete_response_button.type = 'image';
            delete_response_button.className = 'buttonIcon';
            delete_response_button.title = 'delete response'
            delete_response_button.src = 'icons/x.png';
            delete_response_button.alt = 'delete response';
            delete_response_button.addEventListener('click', () => {
                deleteMCResponse(response_div.id);
            });
            response.appendChild(delete_response_button);
        }
        function deleteMCResponse(rId) {
            var response = document.getElementById(rId);
            response.remove();
        }
        function clearMC(qId) {
            var mc_response_div = document.getElementById(qId + '_response_div');
            mc_response_div.remove();
        }
    </script>
</head>

<body onload="addQuestion()">
    <form action="/submitCreateSurvey" method="POST">
        <h3>Survey name</h3>
        <input type="text" placeholder="Enter survey name..." name="survey_name" required>
        
        <h3>Settings</h3>
        <label>Push Time (days)</label>
        <input name="push_time_days" type="number" placeholder="Enter time between pushes..." name="survey_name" required>
        <br>
        <label>Push Count</label>
        <input name="push_count" type="number" placeholder="Enter how many questions to push at a time..." name="survey_name" required>

        <h3>Questions</h3>
        <ol id="survey_questions"></ol>
        <br>
        <div id="controls">
            <img id="add_question" class="largeButtonIcon" title="add question" type="image" onclick="addQuestion()" src="icons/add.png" alt="add question">
        </div>
        <button class="button" type="submit">Done</button>
    </form>
</body>
<footer>
	<p class="attribution">Uicons by <a href="https://www.flaticon.com/uicons">Flaticon</a></p>
</footer>
</html>